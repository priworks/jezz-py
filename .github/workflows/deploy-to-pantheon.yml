name: JEZZ to Pantheon
on:
  push:
    branches:
      - '**'
jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up PHP 8.3
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.3
          extensions: mbstring, curl, xml, zip, mysql

      - name: Install Terminus
        run: |
          curl -sSL https://github.com/pantheon-systems/terminus/releases/download/3.6.2/terminus.phar -o /usr/local/bin/terminus
          chmod +x /usr/local/bin/terminus

      - name: Authenticate with Terminus
        run: |
          terminus auth:login --machine-token=${{ secrets.PANTHEON_MACHINE_TOKEN }}

      - name: Define the environment in which you'll push
        run: |
          # Dynamically use the current branch for deployment
          export CURRENT_BRANCH="${GITHUB_REF##*/}"

          if [ "$CURRENT_BRANCH" == "master" ]; then
            export PANTHEON_ENV="dev"
          else
            export PANTHEON_ENV="$CURRENT_BRANCH"
          fi

          echo "PANTHEON_ENV=$PANTHEON_ENV" >> $GITHUB_ENV
          echo "CURRENT_BRANCH=$CURRENT_BRANCH" >> $GITHUB_ENV

      - name: Add Pantheon Git Remote
        run: |
          # Establish the environment as git
          terminus connection:set ${{ secrets.PANTHEON_SITE_NAME }}.${{ env.PANTHEON_ENV }} git

          # Get Pantheon Git URL and set it as a remote
          export PANTHEON_GIT_URL=$(terminus connection:info ${{ secrets.PANTHEON_SITE_NAME }}.${{ env.PANTHEON_ENV }} --field=git_url)
          git remote add pantheon $PANTHEON_GIT_URL

          echo "PANTHEON_GIT_URL=$PANTHEON_GIT_URL" >> $GITHUB_ENV

          # Check the remotes
          git remote -v

      - name: Setup the SSH Key
        run: |
          mkdir -p ~/.ssh
          ssh-keygen -t rsa -m PEM -C "github-actions@pantheon" -f ~/.ssh/id_rsa -N ""
          cat ~/.ssh/id_rsa.pub
          # eval `ssh-agent`
          # ssh-add ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          # ssh-keyscan -H ${{ env.PANTHEON_GIT_URL }} >> ~/.ssh/known_hosts
          terminus ssh-key:add ~/.ssh/id_rsa.pub --yes

      - name: Get user email from GitHub API
        run: |
          # Set the committer and author to the current GitHub user
          git config --global user.name "${{ github.actor }}"

          # Get the email of the user who triggered the workflow using GitHub API
          USER_EMAIL=$(curl -s \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            https://api.github.com/users/${{ github.actor }} | jq -r .email)

          # Use the retrieved email or fallback to the default private email if not available
          if [ -z "$USER_EMAIL" ]; then
            git config --global user.email "${{ github.actor }}@users.noreply.github.com"
          else
            git config --global user.email "$USER_EMAIL"
          fi

      - name: Push code to Pantheon
        run: |
          # Fetch branches from Pantheon
          git fetch pantheon

          git checkout ${{ env.CURRENT_BRANCH }} || git checkout -b ${{ env.CURRENT_BRANCH }}

          git add -A
          git commit -m "${{ github.event.head_commit.message }}"
          git push -u pantheon ${{ env.CURRENT_BRANCH }}

      - name: Remove the last SSH Key we Added to Pantheon
        run: |
          # grab the ID and use it to remove the key
          LAST_SSH_KEY_ID=$(terminus ssh-key:list | grep "github-actions@pantheon" | awk '{print $1}')
          terminus ssh-key:remove "$LAST_SSH_KEY_ID"
